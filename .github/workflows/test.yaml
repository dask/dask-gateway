name: Test

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "**.rst"
      - ".github/workflows/*"
      - "!.github/workflows/test.yaml"
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "**.rst"
      - ".github/workflows/*"
      - "!.github/workflows/test.yaml"
    branches-ignore:
      - "dependabot/**"
      - "pre-commit-ci-update-config"
    tags: ["**"]
  workflow_dispatch:

env:
  commit_msg: ${{ github.event.head_commit.message }}

jobs:
  main-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'

      - name: Setup Node
        uses: actions/setup-node@v2

      - name: Install requirements
        run: |
          go get github.com/stretchr/testify/assert
          source continuous_integration/install.sh

      - name: List Packages
        run: |
          pip freeze

      - name: Run Tests
        run: |
          py.test tests/ -k 'not kubernetes' -v

      - name: Go Tests
        run: |
          pushd dask-gateway-server/dask-gateway-proxy
          go test
          popd

  hadoop-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Hadoop Install/Start
        if: ${{ env.commit_msg != 'skip-tests' }}
        run: |
          ./continuous_integration/docker/hadoop/start.sh
          ./continuous_integration/docker/hadoop/install.sh
          ./continuous_integration/docker/hadoop/script.sh

  kubernetes-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: AbsaOSS/k3d-action@v1.5.0
        name: "Create k3d Cluster"
        with:
          cluster-name: "k3s-default"
          args: >-
            -p "30200:30200@agent[0]"
            --agents 1
            --api-port 6444
            --no-lb
      - name: Install tools
        run: |
          export KUBECONFIG="$(k3d get-kubeconfig --name='k3s-default')"
          ./continuous_integration/kubernetes/install-tools.sh

      - name: Check k3d
        run: |
          k3d --version
          kubectl get nodes

      - name: Helm lint and render templates
        run: |
          ./continuous_integration/kubernetes/helm-lint-and-template.sh

      - name: Helm Install
        run: |
          stern "" > k8s-logs &
          echo "STERN_PID=$!" >> $GITHUB_ENV
          ./continuous_integration/kubernetes/helm-install.sh
          ./continuous_integration/kubernetes/install.sh

      - name: Kubernetes Tests
        run: |
          ./continuous_integration/kubernetes/script.sh

      - name: Kubernetes log
        if: ${{ always() }}
        run: |
          kill ${{ env.STERN_PID }}
          cat k8s-logs

  pbs-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: PBS Tests
        if: ${{ env.commit_msg != 'skip-tests' }}
        run: |
          ./continuous_integration/docker/pbs/start.sh
          ./continuous_integration/docker/pbs/install.sh
          ./continuous_integration/docker/pbs/script.sh

  slurm-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slurm Tests
        if: ${{ env.commit_msg != 'skip-tests' }}
        run: |
          ./continuous_integration/docker/slurm/start.sh
          ./continuous_integration/docker/slurm/install.sh
          ./continuous_integration/docker/slurm/script.sh
