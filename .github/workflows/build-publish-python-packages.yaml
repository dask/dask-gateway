# This is a GitHub workflow defining a set of jobs with a set of steps.
# ref: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#
name: Build and publish Python packages

# Always test build of packages, but only publish to PyPI on pushed tag
on:
  pull_request:
    paths:
      - "dask-gateway/**"
      - "dask-gateway-server/**"
      - ".github/workflows/build-publish-python-packages.yaml"
  push:
    paths:
      - "dask-gateway/**"
      - "dask-gateway-server/**"
      - ".github/workflows/build-publish-python-packages.yaml"
    branches: ["main"]
    tags: ["**"]
  workflow_dispatch:

jobs:
  # This project includes the dask-gateway and dask-gateway-server Python
  # packages, and the latter includes Golang source code to build the
  # dask-gateway-proxy binary to be shipped in the wheel distribution of
  # dask-gateway-server.
  #
  # dask-gateway's wheel is platform (linux/mac/windows, amd64/arm64)
  # independent, while the dask-gateway-server's wheel will be platform
  # dependent (linux/mac, amd64/arm64), based on the Golang compilation.
  #
  build:
    name: "Build ${{ matrix.package }} (${{ matrix.platform_tag }})"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # GOOS and GOARCH are used to cross compile from the ubuntu linux
        # environment to different platforms and CPU architectures.
        #
        # GOOS and GOARCH options available:
        # https://go.dev/doc/install/source#environment
        #
        include:
          - package: dask-gateway
            upload_sdist: true
            platform_tag: any
            env: {}

          - package: dask-gateway-server
            upload_sdist: true
            platform_tag: linux_x86_64
            env:
              GOOS: linux
              GOARCH: amd64

          - package: dask-gateway-server
            upload_sdist: false
            platform_tag: linux_aarch64
            env:
              GOOS: linux
              GOARCH: arm64

          - package: dask-gateway-server
            upload_sdist: false
            platform_tag: darwin_amd64
            env:
              GOOS: darwin
              GOARCH: amd64

          - package: dask-gateway-server
            upload_sdist: false
            platform_tag: darwin_arm64
            env:
              GOOS: darwin
              GOARCH: arm64

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      - uses: actions/setup-python@v3

      - name: Install build package
        run: |
          pip install build
          pip list

      - name: Build sdist and wheel
        env:
          GOOS: "${{ matrix.env.GOOS }}"
          GOARCH: "${{ matrix.env.GOARCH }}"
        run: |
          python -m build --sdist --wheel ./${{ matrix.package }}

      - name: Upload sdist artifact
        if: matrix.upload_sdist
        uses: actions/upload-artifact@v3
        with:
          path: ${{ matrix.package }}/dist/*.tar.gz
          if-no-files-found: error

      - name: Set platform tag on wheel
        if: matrix.package == 'dask-gateway-server'
        env:
          GOOS: ${{ matrix.env.GOOS }}
          GOARCH: ${{ matrix.env.GOARCH }}
        shell: python
        run: |
          import glob
          import shutil

          any_wheel = glob.glob("dist/*.whl")[0]
          plat_wheel = any_wheel.replace("any.whl", "${{ matrix.platform_tag }}.whl")

          shutil.move(any_wheel, plat_wheel)

      - name: Upload wheel artifact
        if: matrix.package == 'dask-gateway-server'
        uses: actions/upload-artifact@v3
        with:
          path: ${{ matrix.package }}/dist/*.whl
          if-no-files-found: error

  upload:
    name: Upload to PyPI
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download built source distributions and wheels
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Inspect built source distributions and wheels
        run: |
          ls -alh dist
          sha256sum dist/* | tee SHA256SUMS

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          packages_dir: dist/
