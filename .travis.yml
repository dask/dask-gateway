dist: xenial
language: python
python:
  - "3.8"

git:
  depth: false  # Ensure latest tag is pulled

branches:
  only:
    - master

jobs:
    fast_finish: true

    include:
        - if: commit_message !~ skip-tests
          env:
            - MAIN-TESTS=true
          before_install:
            - source continuous_integration/before_install.sh
          install:
            - source continuous_integration/install.sh
          script:
            - py.test tests/ -v
            - flake8
            - black . --check
            - |
              pushd dask-gateway-server/dask-gateway-proxy
              go test
              popd

        - if: (commit_message !~ skip-tests) AND ((commit_message ~= test-all) OR (commit_message ~= test-yarn))
          env:
            - YARN-TESTS=true
          services:
            - docker
          before_install:
            - ./continuous_integration/docker/hadoop/start.sh
          install:
            - ./continuous_integration/docker/hadoop/install.sh
          script:
            - ./continuous_integration/docker/hadoop/script.sh

        - if: (commit_message !~ skip-tests) AND ((commit_message ~= test-all) OR (commit_message ~= test-kube))
          env:
            - KUBERNETES-TESTS=true
          services:
            - docker
          before_install:
            - ./continuous_integration/kubernetes/install-tools.sh
            - ./continuous_integration/kubernetes/k3d-create.sh
            - export KUBECONFIG="$(k3d get-kubeconfig --name='k3s-default')"
          install:
            - stern "" > k8s-logs &
            - export STERN_PID=$!
            - ./continuous_integration/kubernetes/helm-install.sh
            - ./continuous_integration/kubernetes/install.sh
          script:
            - ./continuous_integration/kubernetes/script.sh
          after_script:
            - kill $STERN_PID
            - cat k8s-logs

        - if: (commit_message !~ skip-tests) AND ((commit_message ~= test-all) OR (commit_message ~= test-jobqueue) OR (commit_message ~= test-pbs))
          env:
            - PBS-TESTS=true
          services:
            - docker
          before_install:
            - ./continuous_integration/docker/pbs/start.sh
          install:
            - ./continuous_integration/docker/pbs/install.sh
          script:
            - ./continuous_integration/docker/pbs/script.sh

        - if: (commit_message !~ skip-tests) AND ((commit_message ~= test-all) OR (commit_message ~= test-jobqueue) OR (commit_message ~= test-slurm))
          env:
            - SLURM-TESTS=true
          services:
            - docker
          before_install:
            - ./continuous_integration/docker/slurm/start.sh
          install:
            - ./continuous_integration/docker/slurm/install.sh
          script:
            - ./continuous_integration/docker/slurm/script.sh

        - env:
            - DOCS=true
            - secure: "kHo3xQM15V2soeT7tkOgyjIr+Iq3Dj7qvJO/3nHzOU0QluyewaHG5r1wQscyomQ9cSElCMkln3A0vtgeoDdslFnsMIhwUa7PXTZEIZYKb/tbP6WPntaqceHbgpzq27dw7Y4WVGZemDuyYblLKAYgyp5zbqYkoJb1YaIb+JGas2YF+mbVQF51Bk4mWyxlSc7AcKN0fi54GFq7PRjVCqkTI7uuY5MpPuPO+idX1tcmpsHf3rlpyOqlR4UiPv8w2JJCI5OOQf2DRCOOaDtItldFUaqzI5P/FY/MALA1p/ubvXrpoNgQaHPfRygqGQOsEOZnolg1gcRA8KjPA+Q04SCbZrx5G21CdGN5Kju1NeP3N7RXXJw5jl2zB51kwOf3msgIufds0gC/9ZGVks1lgpiHqwCG34ArUJo4omwYxg8z9ez7jT9vM2VCAdwwwUYmFWdmycld3lvn5MsvRbX2bVuee09rjwe2Sbj2+xBjg33CV5JDwv+rbI1JeYfD+EzXHI8MTj/O5DVINISqNO5ee3sQqJWnv1Fy/l5OSg6rugdNnkj4m1pPuqEGksj39W/m5FS3wBb4YXLQ+do/9aCFJIsQ8xnDw6BVVkwaTjyfhsNI+6vYQlkaTPVinRYyWUhSyApYcArw++NRycWglATS2zHCsZKiRF6Ass3Fs+/KFzkZ52k="
          before_install:
            - source continuous_integration/before_install.sh
          install:
            - source continuous_integration/install.sh
            - pip install kubernetes_asyncio skein sphinx doctr dask-sphinx-theme sphinx-rtd-theme==0.4.3
          script:
            - |
              set -xe
              pushd docs
              make html
              popd
              if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_EVENT_TYPE" == "push" ]]; then
                  doctr deploy . --built-docs docs/build/html/
              fi

notifications:
  email: false
